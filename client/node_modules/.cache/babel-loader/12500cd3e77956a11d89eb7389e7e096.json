{"ast":null,"code":"var _jsxFileName = \"/Users/salt/dev/game-night/client/src/Scoreboard.js\";\nimport React, { useState } from 'react';\nimport { Input, InputNumber, Row, Typography, Avatar, Divider } from 'antd';\nimport { RobotOutlined, BugOutlined, HeartOutlined, ThunderboltOutlined, RocketOutlined } from '@ant-design/icons';\nconst {\n  Text\n} = Typography;\nconst icons = [/*#__PURE__*/React.createElement(BugOutlined, null), /*#__PURE__*/React.createElement(HeartOutlined, null), /*#__PURE__*/React.createElement(ThunderboltOutlined, null), /*#__PURE__*/React.createElement(RocketOutlined, null), /*#__PURE__*/React.createElement(RobotOutlined, null)];\nconst bgColors = ['#ffc107', '#4caf50', '#673ab7', '#795548', '#00bcd4'];\nconst rowStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  height: '50px',\n  fontWeight: '600',\n  justifyContent: 'space-between',\n  maxWidth: 300\n};\n\nconst Scoreboard = ({\n  scores,\n  setScores\n}) => {\n  const [value, setValue] = useState('');\n\n  const onScoreChange = (newScore, name, idx) => {\n    const scoreObject = {\n      name: name,\n      score: newScore\n    };\n    let newScores = [...scores];\n    newScores[idx] = scoreObject;\n    setScores(newScores);\n  };\n\n  const newPlayer = input => {\n    const scoreObject = {\n      name: input.target.value,\n      score: 0\n    };\n    let newScores = [...scores, scoreObject];\n    setScores(newScores);\n    setValue('');\n  };\n\n  const scoreList = () => {\n    return scores.map((person, idx) => /*#__PURE__*/React.createElement(Row, {\n      style: rowStyle,\n      key: person.name\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      style: {\n        background: bgColors[idx]\n      },\n      icon: icons[idx]\n    }), /*#__PURE__*/React.createElement(Text, {\n      style: {\n        color: 'white',\n        fontSize: 20\n      }\n    }, person.name), /*#__PURE__*/React.createElement(InputNumber, {\n      defaultValue: person.score,\n      onChange: val => onScoreChange(val, person.name, idx),\n      id: idx\n    })));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {\n    style: {\n      color: 'white'\n    }\n  }, \"To add a player, type their name below and press Enter.\"), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"First name\",\n    onPressEnter: newPlayer,\n    onChange: e => setValue(e.target.value),\n    alue: value,\n    style: {\n      maxWidth: 358\n    },\n    allowClear: true\n  }), /*#__PURE__*/React.createElement(Divider, null), scoreList());\n};\n\nexport default Scoreboard;","map":{"version":3,"sources":["/Users/salt/dev/game-night/client/src/Scoreboard.js"],"names":["React","useState","Input","InputNumber","Row","Typography","Avatar","Divider","RobotOutlined","BugOutlined","HeartOutlined","ThunderboltOutlined","RocketOutlined","Text","icons","bgColors","rowStyle","display","alignItems","height","fontWeight","justifyContent","maxWidth","Scoreboard","scores","setScores","value","setValue","onScoreChange","newScore","name","idx","scoreObject","score","newScores","newPlayer","input","target","scoreList","map","person","background","color","fontSize","val","e"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Input, InputNumber, Row, Typography, Avatar, Divider } from 'antd';\nimport { RobotOutlined, BugOutlined, HeartOutlined, ThunderboltOutlined, RocketOutlined } from '@ant-design/icons';\nconst { Text } = Typography;\n\nconst icons = [\n  <BugOutlined />,\n  <HeartOutlined />,\n  <ThunderboltOutlined />,\n  <RocketOutlined />,\n  <RobotOutlined />\n]\nconst bgColors = [ '#ffc107', '#4caf50', '#673ab7', '#795548', '#00bcd4' ]\n\nconst rowStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  height: '50px',\n  fontWeight: '600',\n  justifyContent: 'space-between',\n  maxWidth: 300,\n}\n\nconst Scoreboard = ( { scores, setScores } ) => {\n  const [ value, setValue ] = useState( '' )\n\n\n  const onScoreChange = ( newScore, name, idx ) => {\n    const scoreObject = {\n      name: name,\n      score: newScore\n    }\n    let newScores = [ ...scores ]\n    newScores[ idx ] = scoreObject\n    setScores( newScores )\n  }\n\n  const newPlayer = ( input ) => {\n    const scoreObject = {\n      name: input.target.value,\n      score: 0\n    }\n    let newScores = [ ...scores, scoreObject ]\n    setScores( newScores )\n    setValue( '' )\n  }\n\n  const scoreList = () => {\n    return scores.map( ( person, idx ) => (\n      <Row style={rowStyle} key={person.name}>\n        <Avatar style={{ background: bgColors[ idx ] }} icon={icons[ idx ]} />\n        <Text style={{ color: 'white', fontSize: 20 }}>{person.name}</Text>\n        <InputNumber\n          defaultValue={person.score}\n          onChange={( val ) => onScoreChange( val, person.name, idx )} id={idx}\n        />\n      </Row>\n    ) )\n  }\n\n  return (\n    <>\n      <Text style={{ color: 'white' }}>\n        To add a player, type their name below and press Enter.\n      </Text>\n      <br />\n      <Input\n        placeholder='First name'\n        onPressEnter={newPlayer}\n        onChange={( e ) => setValue( e.target.value )}\n        alue={value}\n        style={{ maxWidth: 358 }}\n        allowClear\n      />\n      <Divider />\n      {scoreList()}\n    </>\n  )\n}\nexport default Scoreboard;"]},"metadata":{},"sourceType":"module"}