{"ast":null,"code":"var _jsxFileName = \"/Users/salt/dev/game-night/src/Home.js\";\nimport React, { useState } from 'react';\nimport { Provider, useSelector, useDispatch } from 'react-redux';\nimport './App.css';\nimport { Input, Typography, Button, Card } from 'antd';\nimport WebSocketProvider from './utils/WebSocket';\nimport store from './utils/store';\nimport { createRoom, joinRoom } from './utils/actions';\nimport Chat from './Room';\nconst {\n  Text\n} = Typography;\n\nconst SignIn = () => {\n  const [roomName, setRoomName] = useState(\"\");\n  const [roomId, setRoomId] = useState(\"\");\n  const currentRoom = useSelector(state => state.room);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !currentRoom && /*#__PURE__*/React.createElement(Card, null, /*#__PURE__*/React.createElement(Text, null, \"Create a new room\"), /*#__PURE__*/React.createElement(Input, {\n    size: \"large\",\n    placeholder: \"Room name\",\n    onChange: e => setRoomName(e.target.value)\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => dispatch(createRoom(roomName))\n  }, \"Create\"), /*#__PURE__*/React.createElement(Text, null, \"Join an existing room\"), /*#__PURE__*/React.createElement(Input, {\n    size: \"large\",\n    placeholder: \"Room code\",\n    onChange: e => setRoomName(e.target.value)\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => dispatch(createRoom(roomName))\n  }, \"Join\")), currentRoom && /*#__PURE__*/React.createElement(Chat, null));\n};\n\nfunction Home() {\n  return /*#__PURE__*/React.createElement(Provider, {\n    store: store\n  }, /*#__PURE__*/React.createElement(WebSocketProvider, null, /*#__PURE__*/React.createElement(SignIn, null)));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/salt/dev/game-night/src/Home.js"],"names":["React","useState","Provider","useSelector","useDispatch","Input","Typography","Button","Card","WebSocketProvider","store","createRoom","joinRoom","Chat","Text","SignIn","roomName","setRoomName","roomId","setRoomId","currentRoom","state","room","dispatch","e","target","value","Home"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,WAAhC,QAAmD,aAAnD;AACA,OAAO,WAAP;AACA,SAASC,KAAT,EAAgBC,UAAhB,EAA4BC,MAA5B,EAAoCC,IAApC,QAAgD,MAAhD;AACA,OAAOC,iBAAP,MAA8B,mBAA9B;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,iBAArC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAWR,UAAjB;;AAEA,MAAMS,MAAM,GAAG,MAAM;AACnB,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BhB,QAAQ,CAAE,EAAF,CAA1C;AACA,QAAM,CAAEiB,MAAF,EAAUC,SAAV,IAAwBlB,QAAQ,CAAE,EAAF,CAAtC;AACA,QAAMmB,WAAW,GAAGjB,WAAW,CAAEkB,KAAK,IAAIA,KAAK,CAACC,IAAjB,CAA/B;AAEA,QAAMC,QAAQ,GAAGnB,WAAW,EAA5B;AAEA,sBACE,0CACG,CAACgB,WAAD,iBACC,oBAAC,IAAD,qBACE,oBAAC,IAAD,4BADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,WAAW,EAAC,WAAhC;AAA4C,IAAA,QAAQ,EAAII,CAAF,IAASP,WAAW,CAAEO,CAAC,CAACC,MAAF,CAASC,KAAX;AAA1E,IAFF,eAGE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMH,QAAQ,CAAEZ,UAAU,CAAEK,QAAF,CAAZ;AAA/B,cAHF,eAME,oBAAC,IAAD,gCANF,eAOE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,WAAW,EAAC,WAAhC;AAA4C,IAAA,QAAQ,EAAIQ,CAAF,IAASP,WAAW,CAAEO,CAAC,CAACC,MAAF,CAASC,KAAX;AAA1E,IAPF,eAQE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMH,QAAQ,CAAEZ,UAAU,CAAEK,QAAF,CAAZ;AAA/B,YARF,CAFJ,EAcGI,WAAW,iBAAI,oBAAC,IAAD,OAdlB,CADF;AAkBD,CAzBD;;AA2BA,SAASO,IAAT,GAAgB;AACd,sBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEjB;AAAjB,kBACE,oBAAC,iBAAD,qBACE,oBAAC,MAAD,OADF,CADF,CADF;AAOD;;AAED,eAAeiB,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Provider, useSelector, useDispatch } from 'react-redux'\nimport './App.css';\nimport { Input, Typography, Button, Card } from 'antd';\nimport WebSocketProvider from './utils/WebSocket';\nimport store from './utils/store';\nimport { createRoom, joinRoom } from './utils/actions';\nimport Chat from './Room'\nconst { Text } = Typography;\n\nconst SignIn = () => {\n  const [ roomName, setRoomName ] = useState( \"\" );\n  const [ roomId, setRoomId ] = useState( \"\" );\n  const currentRoom = useSelector( state => state.room );\n\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      {!currentRoom &&\n        <Card>\n          <Text>Create a new room</Text>\n          <Input size=\"large\" placeholder=\"Room name\" onChange={( e ) => setRoomName( e.target.value )} />\n          <Button onClick={() => dispatch( createRoom( roomName ) )}>Create</Button>\n\n\n          <Text>Join an existing room</Text>\n          <Input size=\"large\" placeholder=\"Room code\" onChange={( e ) => setRoomName( e.target.value )} />\n          <Button onClick={() => dispatch( createRoom( roomName ) )}>Join</Button>\n        </Card>\n      }\n\n      {currentRoom && <Chat />}\n    </>\n  );\n}\n\nfunction Home() {\n  return (\n    <Provider store={store}>\n      <WebSocketProvider>\n        <SignIn />\n      </WebSocketProvider>\n    </Provider>\n  )\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}