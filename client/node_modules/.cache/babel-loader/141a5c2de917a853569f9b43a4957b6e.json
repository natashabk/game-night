{"ast":null,"code":"var _jsxFileName = \"/Users/salt/dev/game-night/client/src/Login/CreateUsername.js\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Input, Button, Divider, Row, Radio, Typography } from 'antd';\nimport { setUsername, setAvatar } from '../utils';\nimport { icons } from '../icons/svg';\nimport { lightWhite, inputStyle, btnStyle } from './index';\nconst {\n  Text\n} = Typography;\nconst iconStyle = {\n  height: 'auto',\n  borderRadius: 6,\n  padding: 0,\n  margin: 0\n};\n\nconst randomIcon = () => Object.keys(icons)[Math.floor(Math.random() * 11)];\n\nconst CreateUsername = () => {\n  const [usernameInput, setUsernameInput] = useState(\"\");\n  const [icon, setIcon] = useState(randomIcon());\n  const dispatch = useDispatch();\n\n  const enterRoom = () => {\n    dispatch(setUsername(usernameInput));\n    dispatch(setAvatar(icon));\n  };\n\n  const iconButton = item => /*#__PURE__*/React.createElement(\"button\", {\n    value: item,\n    key: item,\n    style: { ...iconStyle,\n      background: icon === item ? lightWhite : 'none',\n      border: icon === item ? '2px solid white' : 'none'\n    },\n    onClick: () => setIcon(item)\n  }, icons[item]);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      minHeight: 70\n    }\n  }, /*#__PURE__*/React.createElement(Text, null, \"Select avatar:\"), /*#__PURE__*/React.createElement(Radio.Group, {\n    style: {\n      display: 'flex',\n      marginTop: 3\n    }\n  }, Object.keys(icons).map(item => iconButton(item)))), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      background: lightWhite\n    }\n  }), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Input, {\n    size: \"large\",\n    placeholder: \"Enter username\",\n    onChange: e => setUsernameInput(e.target.value),\n    onPressEnter: enterRoom,\n    style: inputStyle\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: enterRoom,\n    style: btnStyle\n  }, \"Join\")));\n};\n\nexport default CreateUsername;","map":{"version":3,"sources":["/Users/salt/dev/game-night/client/src/Login/CreateUsername.js"],"names":["React","useState","useDispatch","Input","Button","Divider","Row","Radio","Typography","setUsername","setAvatar","icons","lightWhite","inputStyle","btnStyle","Text","iconStyle","height","borderRadius","padding","margin","randomIcon","Object","keys","Math","floor","random","CreateUsername","usernameInput","setUsernameInput","icon","setIcon","dispatch","enterRoom","iconButton","item","background","border","minHeight","display","marginTop","map","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux'\nimport { Input, Button, Divider, Row, Radio, Typography } from 'antd';\nimport { setUsername, setAvatar } from '../utils';\nimport { icons } from '../icons/svg';\nimport { lightWhite, inputStyle, btnStyle } from './index'\nconst { Text } = Typography\nconst iconStyle = { height: 'auto', borderRadius: 6, padding: 0, margin: 0 }\nconst randomIcon = () => Object.keys( icons )[ Math.floor( Math.random() * 11 ) ]\n\nconst CreateUsername = () => {\n  const [ usernameInput, setUsernameInput ] = useState( \"\" );\n  const [ icon, setIcon ] = useState( randomIcon() )\n\n  const dispatch = useDispatch();\n  const enterRoom = () => {\n    dispatch( setUsername( usernameInput ) )\n    dispatch( setAvatar( icon ) )\n  };\n\n  const iconButton = ( item ) => (\n    <button\n      value={item}\n      key={item}\n      style={{\n        ...iconStyle,\n        background: icon === item ? lightWhite : 'none',\n        border: icon === item ? '2px solid white' : 'none'\n      }}\n      onClick={() => setIcon( item )}\n    >\n      {icons[ item ]}\n    </button>\n  )\n\n  return (\n    <>\n      <Row style={{ minHeight: 70 }}>\n        <Text>Select avatar:</Text>\n        <Radio.Group style={{ display: 'flex', marginTop: 3 }}>\n          {Object.keys( icons ).map( item => iconButton( item ) )}\n        </Radio.Group>\n      </Row>\n      <Divider style={{ background: lightWhite }} />\n      <Row>\n        <Input\n          size=\"large\"\n          placeholder=\"Enter username\"\n          onChange={( e ) => setUsernameInput( e.target.value )}\n          onPressEnter={enterRoom}\n          style={inputStyle}\n        />\n        <Button type='primary' onClick={enterRoom} style={btnStyle}>Join</Button>\n      </Row>\n    </>\n  )\n}\n\nexport default CreateUsername"]},"metadata":{},"sourceType":"module"}