{"ast":null,"code":"var _jsxFileName = \"/Users/salt/dev/game-night/client/src/SignIn.js\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './App.css';\nimport { Input, Button, Card, Divider, Row, Radio } from 'antd';\nimport { createRoom, joinRoom, setUsername } from './utils';\nimport { icons } from './icons/svg';\nconst lightWhite = '#ffffff38';\nconst btnStyle = {\n  height: 40,\n  width: 75\n};\nconst inputStyle = {\n  maxWidth: 400,\n  minWidth: 200\n};\n\nconst CreateUserName = () => {\n  const [usernameInput, setUsernameInput] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const enterRoom = () => dispatch(setUsername(usernameInput));\n\n  const iconButton = item => /*#__PURE__*/React.createElement(Radio.Button, null, icons[item]);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Radio.Group, null, Object.keys(icons).map(item => iconButton(item)))), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      background: lightWhite\n    }\n  }), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Input, {\n    size: \"large\",\n    placeholder: \"Enter username\",\n    onChange: e => setUsernameInput(e.target.value),\n    onPressEnter: enterRoom,\n    style: inputStyle\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: enterRoom,\n    style: btnStyle\n  }, \"Join\")));\n};\n\nconst CreateOrJoinRoom = () => {\n  const [roomName, setRoomName] = useState(\"\");\n  const [roomId, setRoomId] = useState(\"\");\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Input, {\n    size: \"large\",\n    placeholder: \"Create a new room\",\n    onChange: e => setRoomName(e.target.value),\n    onPressEnter: () => dispatch(createRoom(roomName)),\n    style: inputStyle\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: () => dispatch(createRoom(roomName)),\n    style: btnStyle\n  }, \"Create\")), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      background: lightWhite\n    }\n  }), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Input, {\n    size: \"large\",\n    placeholder: \"Join an existing room\",\n    onChange: e => setRoomId(e.target.value),\n    onPressEnter: () => dispatch(joinRoom(roomId)),\n    style: inputStyle\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: () => dispatch(joinRoom(roomId)),\n    style: btnStyle\n  }, \"Join\")));\n};\n\nconst SignIn = () => {\n  const room = useSelector(state => state.room);\n  return /*#__PURE__*/React.createElement(Row, {\n    justify: 'center'\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      width: 550,\n      background: lightWhite\n    }\n  }, room ? /*#__PURE__*/React.createElement(CreateOrJoinRoom, null) : /*#__PURE__*/React.createElement(CreateUserName, null)));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/Users/salt/dev/game-night/client/src/SignIn.js"],"names":["React","useState","useDispatch","useSelector","Input","Button","Card","Divider","Row","Radio","createRoom","joinRoom","setUsername","icons","lightWhite","btnStyle","height","width","inputStyle","maxWidth","minWidth","CreateUserName","usernameInput","setUsernameInput","dispatch","enterRoom","iconButton","item","Object","keys","map","background","e","target","value","CreateOrJoinRoom","roomName","setRoomName","roomId","setRoomId","SignIn","room","state"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport './App.css';\nimport { Input, Button, Card, Divider, Row, Radio } from 'antd';\nimport { createRoom, joinRoom, setUsername } from './utils';\nimport { icons } from './icons/svg';\n\nconst lightWhite = '#ffffff38'\nconst btnStyle = { height: 40, width: 75 }\nconst inputStyle = { maxWidth: 400, minWidth: 200 }\n\nconst CreateUserName = () => {\n  const [ usernameInput, setUsernameInput ] = useState( \"\" );\n  const dispatch = useDispatch();\n  const enterRoom = () => dispatch( setUsername( usernameInput ) );\n  const iconButton = ( item ) => <Radio.Button>{icons[ item ]}</Radio.Button>\n\n  return (\n    <>\n      <Row>\n        <Radio.Group>\n          {Object.keys( icons ).map( item => iconButton( item ) )}\n        </Radio.Group>\n      </Row>\n      <Divider style={{ background: lightWhite }} />\n      <Row>\n        <Input\n          size=\"large\"\n          placeholder=\"Enter username\"\n          onChange={( e ) => setUsernameInput( e.target.value )}\n          onPressEnter={enterRoom}\n          style={inputStyle}\n        />\n        <Button type='primary' onClick={enterRoom} style={btnStyle}>Join</Button>\n      </Row>\n    </>\n  )\n}\n\nconst CreateOrJoinRoom = () => {\n  const [ roomName, setRoomName ] = useState( \"\" );\n  const [ roomId, setRoomId ] = useState( \"\" );\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Row>\n        <Input\n          size=\"large\"\n          placeholder=\"Create a new room\"\n          onChange={( e ) => setRoomName( e.target.value )}\n          onPressEnter={() => dispatch( createRoom( roomName ) )}\n          style={inputStyle}\n        />\n        <Button type='primary' onClick={() => dispatch( createRoom( roomName ) )} style={btnStyle}>\n          Create\n        </Button>\n      </Row>\n      <Divider style={{ background: lightWhite }} />\n      <Row>\n        <Input\n          size=\"large\"\n          placeholder=\"Join an existing room\"\n          onChange={( e ) => setRoomId( e.target.value )}\n          onPressEnter={() => dispatch( joinRoom( roomId ) )}\n          style={inputStyle}\n        />\n        <Button type='primary' onClick={() => dispatch( joinRoom( roomId ) )} style={btnStyle}>\n          Join\n        </Button>\n      </Row>\n    </>\n  )\n}\n\nconst SignIn = () => {\n  const room = useSelector( state => state.room );\n  return (\n    <Row justify={'center'}>\n      <Card style={{ width: 550, background: lightWhite }}>\n        {room ? <CreateOrJoinRoom /> : <CreateUserName />}\n      </Card>\n    </Row>\n  );\n}\n\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}