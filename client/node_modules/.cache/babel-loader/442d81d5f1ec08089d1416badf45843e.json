{"ast":null,"code":"var _jsxFileName = \"/Users/salt/dev/game-night/client/src/Chat.js\";\nimport React, { useState, useContext } from 'react';\nimport { useSelector } from 'react-redux';\nimport { WebSocketContext } from './utils';\nimport { icons } from './icons/license';\n\nconst Chat = () => {\n  const [msgInput, setMsgInput] = useState(\"\");\n  const room = useSelector(state => state.room);\n  const username = useSelector(state => state.username);\n  const avatar = useSelector(state => state.avatar);\n  const chats = useSelector(state => state.chatLog);\n  const ws = useContext(WebSocketContext);\n\n  const sendMessage = () => {\n    ws.sendMessage(room.id, {\n      username: username,\n      avatar: avatar,\n      message: msgInput\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h3\", null, room.name, \" (\", room.id, \")\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"room\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"history\",\n    style: {\n      width: \"400px\",\n      border: \"1px solid #ccc\",\n      height: \"500px\",\n      textAlign: \"left\",\n      padding: \"10px\",\n      overflow: \"scroll\",\n      background: 'white'\n    }\n  }, chats.map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: i\n  }, icons[avatar], /*#__PURE__*/React.createElement(\"i\", null, c.username, \":\"), \" \", c.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\"\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: msgInput,\n    onChange: e => setMsgInput(e.target.value)\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: sendMessage\n  }, \"Send\"))));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/Users/salt/dev/game-night/client/src/Chat.js"],"names":["React","useState","useContext","useSelector","WebSocketContext","icons","Chat","msgInput","setMsgInput","room","state","username","avatar","chats","chatLog","ws","sendMessage","id","message","name","width","border","height","textAlign","padding","overflow","background","map","c","i","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA6B,aAA7B;AACA,SAASC,gBAAT,QAAiC,SAAjC;AACA,SAASC,KAAT,QAAsB,iBAAtB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4BP,QAAQ,CAAE,EAAF,CAA1C;AAEA,QAAMQ,IAAI,GAAGN,WAAW,CAAEO,KAAK,IAAIA,KAAK,CAACD,IAAjB,CAAxB;AACA,QAAME,QAAQ,GAAGR,WAAW,CAAEO,KAAK,IAAIA,KAAK,CAACC,QAAjB,CAA5B;AACA,QAAMC,MAAM,GAAGT,WAAW,CAAEO,KAAK,IAAIA,KAAK,CAACE,MAAjB,CAA1B;AACA,QAAMC,KAAK,GAAGV,WAAW,CAAEO,KAAK,IAAIA,KAAK,CAACI,OAAjB,CAAzB;AAEA,QAAMC,EAAE,GAAGb,UAAU,CAAEE,gBAAF,CAArB;;AAEA,QAAMY,WAAW,GAAG,MAAM;AACxBD,IAAAA,EAAE,CAACC,WAAH,CAAgBP,IAAI,CAACQ,EAArB,EAAyB;AACvBN,MAAAA,QAAQ,EAAEA,QADa;AAEvBC,MAAAA,MAAM,EAAEA,MAFe;AAGvBM,MAAAA,OAAO,EAAEX;AAHc,KAAzB;AAKD,GAND;;AAQA,sBACE,8CACE,gCAAKE,IAAI,CAACU,IAAV,QAAkBV,IAAI,CAACQ,EAAvB,MADF,eAEE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,MAAM,EAAE,gBAA1B;AAA4CC,MAAAA,MAAM,EAAE,OAApD;AAA6DC,MAAAA,SAAS,EAAE,MAAxE;AAAgFC,MAAAA,OAAO,EAAE,MAAzF;AAAiGC,MAAAA,QAAQ,EAAE,QAA3G;AAAqHC,MAAAA,UAAU,EAAE;AAAjI;AAAhC,KACGb,KAAK,CAACc,GAAN,CAAW,CAAEC,CAAF,EAAKC,CAAL,kBACV;AAAK,IAAA,GAAG,EAAEA;AAAV,KAAcxB,KAAK,CAAEO,MAAF,CAAnB,eAA8B,+BAAIgB,CAAC,CAACjB,QAAN,MAA9B,OAAoDiB,CAAC,CAACV,OAAtD,CADD,CADH,CADF,eAME;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,KAAK,EAAEX,QAA1B;AAAoC,IAAA,QAAQ,EAAIuB,CAAF,IAAStB,WAAW,CAAEsB,CAAC,CAACC,MAAF,CAASC,KAAX;AAAlE,IADF,eAEE;AAAQ,IAAA,OAAO,EAAEhB;AAAjB,YAFF,CANF,CAFF,CADF;AAgBD,CAlCD;;AAoCA,eAAeV,IAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { useSelector, } from 'react-redux'\nimport { WebSocketContext } from './utils';\nimport { icons } from './icons/license';\n\nconst Chat = () => {\n  const [ msgInput, setMsgInput ] = useState( \"\" );\n\n  const room = useSelector( state => state.room );\n  const username = useSelector( state => state.username );\n  const avatar = useSelector( state => state.avatar );\n  const chats = useSelector( state => state.chatLog );\n\n  const ws = useContext( WebSocketContext );\n\n  const sendMessage = () => {\n    ws.sendMessage( room.id, {\n      username: username,\n      avatar: avatar,\n      message: msgInput\n    } );\n  }\n\n  return (\n    <div>\n      <h3>{room.name} ({room.id})</h3>\n      <div className=\"room\">\n        <div className=\"history\" style={{ width: \"400px\", border: \"1px solid #ccc\", height: \"500px\", textAlign: \"left\", padding: \"10px\", overflow: \"scroll\", background: 'white' }}>\n          {chats.map( ( c, i ) => (\n            <div key={i}>{icons[ avatar ]}<i>{c.username}:</i> {c.message}</div>\n          ) )}\n        </div>\n        <div className=\"control\">\n          <input type=\"text\" value={msgInput} onChange={( e ) => setMsgInput( e.target.value )} />\n          <button onClick={sendMessage}>Send</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Chat"]},"metadata":{},"sourceType":"module"}