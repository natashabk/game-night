{"ast":null,"code":"var _jsxFileName = \"/Users/salt/dev/game-night/src/Home.js\";\nimport React, { useState, useContext } from 'react';\nimport './App.css';\nimport WebSocketProvider, { WebSocketContext } from './utils/WebSocket';\nimport { Provider, useSelector, useDispatch } from 'react-redux';\nimport store from './utils/store';\nimport { createRoom, setUsername, joinRoom } from './utils/actions';\n\nfunction ChatRoom() {\n  const [usernameInput, setUsernameInput] = useState(\"\");\n  const [msgInput, setMsgInput] = useState(\"\");\n  const room = useSelector(state => state.room);\n  const username = useSelector(state => state.username);\n  const chats = useSelector(state => state.chatLog);\n  const dispatch = useDispatch();\n  const ws = useContext(WebSocketContext);\n\n  function enterRooom() {\n    dispatch(setUsername(usernameInput));\n  }\n\n  const sendMessage = () => {\n    ws.sendMessage(room.id, {\n      username: username,\n      message: msgInput\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"h3\", null, room.name, \" (\", room.id, \")\"), !username && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user\"\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Enter username\",\n    value: usernameInput,\n    onChange: e => setUsernameInput(e.target.value)\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: enterRooom\n  }, \"Enter Room\")), username && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"room\"\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"history\",\n    style: {\n      width: \"400px\",\n      border: \"1px solid #ccc\",\n      height: \"100px\",\n      textAlign: \"left\",\n      padding: \"10px\",\n      overflow: \"scroll\"\n    }\n  }, chats.map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: i\n  }, /*#__PURE__*/React.createElement(\"i\", null, c.username, \":\"), \" \", c.message))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control\"\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: msgInput,\n    onChange: e => setMsgInput(e.target.value)\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: sendMessage\n  }, \"Send\"))));\n}\n\nfunction HomeComponent() {\n  const [roomName, setRoomName] = useState(\"\");\n  const [roomId, setRoomId] = useState(\"\");\n  const currentRoom = useSelector(state => state.room);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !currentRoom && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create\"\n  }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"span\", null, \"Create new room\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Room name\",\n    value: roomName,\n    onChange: e => setRoomName(e.target.value)\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(createRoom(roomName))\n  }, \"Create\")), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"span\", null, \"Join existing room\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Room code\",\n    value: roomId,\n    onChange: e => setRoomId(e.target.value)\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(joinRoom(roomId))\n  }, \"Join\"))), currentRoom && /*#__PURE__*/React.createElement(ChatRoom, null));\n}\n\nfunction Home() {\n  return /*#__PURE__*/React.createElement(Provider, {\n    store: store\n  }, /*#__PURE__*/React.createElement(WebSocketProvider, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\"\n  }, /*#__PURE__*/React.createElement(HomeComponent, null))));\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/salt/dev/game-night/src/Home.js"],"names":["React","useState","useContext","WebSocketProvider","WebSocketContext","Provider","useSelector","useDispatch","store","createRoom","setUsername","joinRoom","ChatRoom","usernameInput","setUsernameInput","msgInput","setMsgInput","room","state","username","chats","chatLog","dispatch","ws","enterRooom","sendMessage","id","message","name","e","target","value","width","border","height","textAlign","padding","overflow","map","c","i","HomeComponent","roomName","setRoomName","roomId","setRoomId","currentRoom","Home"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport './App.css';\nimport WebSocketProvider, { WebSocketContext } from './utils/WebSocket';\nimport { Provider, useSelector, useDispatch } from 'react-redux'\nimport store from './utils/store';\nimport { createRoom, setUsername, joinRoom } from './utils/actions';\n\nfunction ChatRoom() {\n  const [ usernameInput, setUsernameInput ] = useState( \"\" );\n  const [ msgInput, setMsgInput ] = useState( \"\" );\n\n  const room = useSelector( state => state.room );\n  const username = useSelector( state => state.username );\n  const chats = useSelector( state => state.chatLog );\n\n  const dispatch = useDispatch();\n  const ws = useContext( WebSocketContext );\n\n  function enterRooom() {\n    dispatch( setUsername( usernameInput ) );\n  }\n\n  const sendMessage = () => {\n    ws.sendMessage( room.id, {\n      username: username,\n      message: msgInput\n    } );\n  }\n\n  return (\n    <div>\n      <h3>{room.name} ({room.id})</h3>\n      {!username &&\n        <div className=\"user\">\n          <input type=\"text\" placeholder=\"Enter username\" value={usernameInput} onChange={( e ) => setUsernameInput( e.target.value )} />\n          <button onClick={enterRooom}>Enter Room</button>\n        </div>\n      }\n      {username &&\n        <div className=\"room\">\n          <div className=\"history\" style={{ width: \"400px\", border: \"1px solid #ccc\", height: \"100px\", textAlign: \"left\", padding: \"10px\", overflow: \"scroll\" }}>\n            {chats.map( ( c, i ) => (\n              <div key={i}><i>{c.username}:</i> {c.message}</div>\n            ) )}\n          </div>\n          <div className=\"control\">\n            <input type=\"text\" value={msgInput} onChange={( e ) => setMsgInput( e.target.value )} />\n            <button onClick={sendMessage}>Send</button>\n          </div>\n        </div>\n      }\n\n    </div>\n  )\n}\n\nfunction HomeComponent() {\n  const [ roomName, setRoomName ] = useState( \"\" );\n  const [ roomId, setRoomId ] = useState( \"\" );\n  const currentRoom = useSelector( state => state.room );\n\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      {!currentRoom &&\n        <div className=\"create\">\n          <div>\n            <span>Create new room</span>\n            <input type=\"text\" placeholder=\"Room name\" value={roomName} onChange={( e ) => setRoomName( e.target.value )} />\n            <button onClick={() => dispatch( createRoom( roomName ) )}>Create</button>\n          </div>\n          <div>\n            <span>Join existing room</span>\n            <input type=\"text\" placeholder=\"Room code\" value={roomId} onChange={( e ) => setRoomId( e.target.value )} />\n            <button onClick={() => dispatch( joinRoom( roomId ) )}>Join</button>\n          </div>\n        </div>\n      }\n\n      {currentRoom &&\n        <ChatRoom />\n      }\n    </>\n  );\n}\n\nfunction Home() {\n  return (\n    <Provider store={store}>\n      <WebSocketProvider>\n        <div className=\"App\">\n          <HomeComponent />\n        </div>\n      </WebSocketProvider>\n    </Provider>\n  )\n}\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}