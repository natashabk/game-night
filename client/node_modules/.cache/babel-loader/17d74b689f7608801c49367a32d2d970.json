{"ast":null,"code":"var _jsxFileName = \"/Users/salt/dev/game-night/src/SignIn.js\";\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './App.css';\nimport { Input, Button, Card, Divider, Row } from 'antd';\nimport { createRoom, joinRoom } from './utils/actions';\nimport Chat from './Room';\nconst lightWhite = '#ffffff38';\n\nconst SignIn = () => {\n  const [roomName, setRoomName] = useState(\"\");\n  const [roomId, setRoomId] = useState(\"\");\n  const currentRoom = useSelector(state => state.room);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !currentRoom && /*#__PURE__*/React.createElement(Card, {\n    style: {\n      width: 550,\n      background: lightWhite\n    }\n  }, /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Input, {\n    size: \"large\",\n    placeholder: \"Create a new room\",\n    onChange: e => setRoomName(e.target.value),\n    onEnter: () => dispatch(createRoom(roomName)),\n    style: {\n      maxWidth: 400,\n      minWidth: 200\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: () => dispatch(createRoom(roomName)),\n    style: {\n      height: 40,\n      width: 75\n    }\n  }, \"Create\")), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      background: lightWhite\n    }\n  }), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Input, {\n    size: \"large\",\n    placeholder: \"Join an existing room\",\n    onChange: e => setRoomId(e.target.value),\n    onEnter: () => dispatch(joinRoom(roomId)),\n    style: {\n      maxWidth: 400,\n      minWidth: 200\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: () => dispatch(joinRoom(roomId)),\n    style: {\n      height: 40,\n      width: 75\n    }\n  }, \"Join\"))), currentRoom && /*#__PURE__*/React.createElement(Chat, null));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/Users/salt/dev/game-night/src/SignIn.js"],"names":["React","useState","useSelector","useDispatch","Input","Button","Card","Divider","Row","createRoom","joinRoom","Chat","lightWhite","SignIn","roomName","setRoomName","roomId","setRoomId","currentRoom","state","room","dispatch","width","background","e","target","value","maxWidth","minWidth","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,WAAP;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,OAA9B,EAAuCC,GAAvC,QAAkD,MAAlD;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,iBAArC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,MAAMC,UAAU,GAAG,WAAnB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4Bd,QAAQ,CAAE,EAAF,CAA1C;AACA,QAAM,CAAEe,MAAF,EAAUC,SAAV,IAAwBhB,QAAQ,CAAE,EAAF,CAAtC;AACA,QAAMiB,WAAW,GAAGhB,WAAW,CAAEiB,KAAK,IAAIA,KAAK,CAACC,IAAjB,CAA/B;AAEA,QAAMC,QAAQ,GAAGlB,WAAW,EAA5B;AAEA,sBACE,0CACG,CAACe,WAAD,iBACC,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEI,MAAAA,KAAK,EAAE,GAAT;AAAcC,MAAAA,UAAU,EAAEX;AAA1B;AAAb,kBACE,oBAAC,GAAD,qBACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAC,mBAFd;AAGE,IAAA,QAAQ,EAAIY,CAAF,IAAST,WAAW,CAAES,CAAC,CAACC,MAAF,CAASC,KAAX,CAHhC;AAIE,IAAA,OAAO,EAAE,MAAML,QAAQ,CAAEZ,UAAU,CAAEK,QAAF,CAAZ,CAJzB;AAKE,IAAA,KAAK,EAAE;AAAEa,MAAAA,QAAQ,EAAE,GAAZ;AAAiBC,MAAAA,QAAQ,EAAE;AAA3B;AALT,IADF,eAQE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAE,MAAMP,QAAQ,CAAEZ,UAAU,CAAEK,QAAF,CAAZ,CAA9C;AAA0E,IAAA,KAAK,EAAE;AAAEe,MAAAA,MAAM,EAAE,EAAV;AAAcP,MAAAA,KAAK,EAAE;AAArB;AAAjF,cARF,CADF,eAaE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAEX;AAAd;AAAhB,IAbF,eAcE,oBAAC,GAAD,qBACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,WAAW,EAAC,uBAFd;AAGE,IAAA,QAAQ,EAAIY,CAAF,IAASP,SAAS,CAAEO,CAAC,CAACC,MAAF,CAASC,KAAX,CAH9B;AAIE,IAAA,OAAO,EAAE,MAAML,QAAQ,CAAEX,QAAQ,CAAEM,MAAF,CAAV,CAJzB;AAKE,IAAA,KAAK,EAAE;AAAEW,MAAAA,QAAQ,EAAE,GAAZ;AAAiBC,MAAAA,QAAQ,EAAE;AAA3B;AALT,IADF,eAQE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,OAAO,EAAE,MAAMP,QAAQ,CAAEX,QAAQ,CAAEM,MAAF,CAAV,CAA9C;AAAsE,IAAA,KAAK,EAAE;AAAEa,MAAAA,MAAM,EAAE,EAAV;AAAcP,MAAAA,KAAK,EAAE;AAArB;AAA7E,YARF,CAdF,CAFJ,EA+BGJ,WAAW,iBAAI,oBAAC,IAAD,OA/BlB,CADF;AAmCD,CA1CD;;AA4CA,eAAeL,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport './App.css';\nimport { Input, Button, Card, Divider, Row } from 'antd';\nimport { createRoom, joinRoom } from './utils/actions';\nimport Chat from './Room'\n\nconst lightWhite = '#ffffff38'\n\nconst SignIn = () => {\n  const [ roomName, setRoomName ] = useState( \"\" );\n  const [ roomId, setRoomId ] = useState( \"\" );\n  const currentRoom = useSelector( state => state.room );\n\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      {!currentRoom &&\n        <Card style={{ width: 550, background: lightWhite }}>\n          <Row>\n            <Input\n              size=\"large\"\n              placeholder=\"Create a new room\"\n              onChange={( e ) => setRoomName( e.target.value )}\n              onEnter={() => dispatch( createRoom( roomName ) )}\n              style={{ maxWidth: 400, minWidth: 200 }}\n            />\n            <Button type='primary' onClick={() => dispatch( createRoom( roomName ) )} style={{ height: 40, width: 75 }}>\n              Create\n            </Button>\n          </Row>\n          <Divider style={{ background: lightWhite }} />\n          <Row>\n            <Input\n              size=\"large\"\n              placeholder=\"Join an existing room\"\n              onChange={( e ) => setRoomId( e.target.value )}\n              onEnter={() => dispatch( joinRoom( roomId ) )}\n              style={{ maxWidth: 400, minWidth: 200 }}\n            />\n            <Button type='primary' onClick={() => dispatch( joinRoom( roomId ) )} style={{ height: 40, width: 75 }}>\n              Join\n            </Button>\n          </Row>\n        </Card>\n      }\n\n      {currentRoom && <Chat />}\n    </>\n  );\n}\n\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}