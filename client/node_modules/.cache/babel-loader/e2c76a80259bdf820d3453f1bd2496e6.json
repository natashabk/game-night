{"ast":null,"code":"var _jsxFileName = \"/Users/salt/dev/game-night/client/src/SignIn.js\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './App.css';\nimport { Input, Button, Card, Divider, Row, Radio, Typography } from 'antd';\nimport { createRoom, joinRoom, setUsername, setAvatar } from './utils';\nimport { icons } from './icons/svg';\nconst {\n  Text\n} = Typography;\nconst lightWhite = '#ffffff38';\nconst btnStyle = {\n  height: 40,\n  width: 75\n};\nconst inputStyle = {\n  maxWidth: 400,\n  minWidth: 200\n};\nconst iconStyle = {\n  height: 'auto',\n  borderRadius: 6,\n  padding: 0,\n  margin: 0\n};\n\nconst randomIcon = () => Object.keys(icons)[Math.floor(Math.random() * 11)];\n\nconst CreateUserName = () => {\n  const [usernameInput, setUsernameInput] = useState(\"\");\n  const [icon, setIcon] = useState(randomIcon());\n  const dispatch = useDispatch();\n\n  const enterRoom = () => {\n    dispatch(setUsername(usernameInput));\n    dispatch(setAvatar(icon));\n  };\n\n  const iconButton = item => /*#__PURE__*/React.createElement(\"button\", {\n    value: item,\n    key: item,\n    style: { ...iconStyle,\n      background: icon === item ? lightWhite : 'none',\n      border: icon === item ? '2px solid white' : 'none'\n    },\n    onClick: () => setIcon(item)\n  }, icons[item]);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      minHeight: 70\n    }\n  }, /*#__PURE__*/React.createElement(Text, null, \"Select avatar:\"), /*#__PURE__*/React.createElement(Radio.Group, {\n    style: {\n      display: 'flex',\n      marginTop: 3\n    }\n  }, Object.keys(icons).map(item => iconButton(item)))), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      background: lightWhite\n    }\n  }), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Input, {\n    size: \"large\",\n    placeholder: \"Enter username\",\n    onChange: e => setUsernameInput(e.target.value),\n    onPressEnter: enterRoom,\n    style: inputStyle\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: enterRoom,\n    style: btnStyle\n  }, \"Join\")));\n};\n\nconst CreateOrJoinRoom = () => {\n  const [roomName, setRoomName] = useState(\"\");\n  const [roomId, setRoomId] = useState(\"\");\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Input, {\n    size: \"large\",\n    placeholder: \"Create a new room\",\n    onChange: e => setRoomName(e.target.value),\n    onPressEnter: () => dispatch(createRoom(roomName)),\n    style: inputStyle\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: () => dispatch(createRoom(roomName)),\n    style: btnStyle\n  }, \"Create\")), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      background: lightWhite\n    }\n  }), /*#__PURE__*/React.createElement(Row, null, /*#__PURE__*/React.createElement(Input, {\n    size: \"large\",\n    placeholder: \"Join an existing room\",\n    onChange: e => setRoomId(e.target.value),\n    onPressEnter: () => dispatch(joinRoom(roomId)),\n    style: inputStyle\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: () => dispatch(joinRoom(roomId)),\n    style: btnStyle\n  }, \"Join\")));\n};\n\nconst SignIn = () => {\n  const room = useSelector(state => state.room);\n  return /*#__PURE__*/React.createElement(Row, {\n    justify: 'center'\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      width: 550,\n      background: lightWhite\n    }\n  }, room ? /*#__PURE__*/React.createElement(CreateOrJoinRoom, null) : /*#__PURE__*/React.createElement(CreateUserName, null)));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/Users/salt/dev/game-night/client/src/SignIn.js"],"names":["React","useState","useDispatch","useSelector","Input","Button","Card","Divider","Row","Radio","Typography","createRoom","joinRoom","setUsername","setAvatar","icons","Text","lightWhite","btnStyle","height","width","inputStyle","maxWidth","minWidth","iconStyle","borderRadius","padding","margin","randomIcon","Object","keys","Math","floor","random","CreateUserName","usernameInput","setUsernameInput","icon","setIcon","dispatch","enterRoom","iconButton","item","background","border","minHeight","display","marginTop","map","e","target","value","CreateOrJoinRoom","roomName","setRoomName","roomId","setRoomId","SignIn","room","state"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport './App.css';\nimport { Input, Button, Card, Divider, Row, Radio, Typography } from 'antd';\nimport { createRoom, joinRoom, setUsername, setAvatar } from './utils';\nimport { icons } from './icons/svg';\n\nconst { Text } = Typography\nconst lightWhite = '#ffffff38'\nconst btnStyle = { height: 40, width: 75 }\nconst inputStyle = { maxWidth: 400, minWidth: 200 }\nconst iconStyle = { height: 'auto', borderRadius: 6, padding: 0, margin: 0 }\n\nconst randomIcon = () => Object.keys( icons )[ Math.floor( Math.random() * 11 ) ]\n\nconst CreateUserName = () => {\n  const [ usernameInput, setUsernameInput ] = useState( \"\" );\n  const [ icon, setIcon ] = useState( randomIcon() )\n\n  const dispatch = useDispatch();\n  const enterRoom = () => {\n    dispatch( setUsername( usernameInput ) )\n    dispatch( setAvatar( icon ) )\n  };\n\n  const iconButton = ( item ) => (\n    <button\n      value={item}\n      key={item}\n      style={{\n        ...iconStyle,\n        background: icon === item ? lightWhite : 'none',\n        border: icon === item ? '2px solid white' : 'none'\n      }}\n      onClick={() => setIcon( item )}\n    >\n      {icons[ item ]}\n    </button>\n  )\n\n  return (\n    <>\n      <Row style={{ minHeight: 70 }}>\n        <Text>Select avatar:</Text>\n        <Radio.Group style={{ display: 'flex', marginTop: 3 }}>\n          {Object.keys( icons ).map( item => iconButton( item ) )}\n        </Radio.Group>\n      </Row>\n      <Divider style={{ background: lightWhite }} />\n      <Row>\n        <Input\n          size=\"large\"\n          placeholder=\"Enter username\"\n          onChange={( e ) => setUsernameInput( e.target.value )}\n          onPressEnter={enterRoom}\n          style={inputStyle}\n        />\n        <Button type='primary' onClick={enterRoom} style={btnStyle}>Join</Button>\n      </Row>\n    </>\n  )\n}\n\nconst CreateOrJoinRoom = () => {\n  const [ roomName, setRoomName ] = useState( \"\" );\n  const [ roomId, setRoomId ] = useState( \"\" );\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <Row>\n        <Input\n          size=\"large\"\n          placeholder=\"Create a new room\"\n          onChange={( e ) => setRoomName( e.target.value )}\n          onPressEnter={() => dispatch( createRoom( roomName ) )}\n          style={inputStyle}\n        />\n        <Button type='primary' onClick={() => dispatch( createRoom( roomName ) )} style={btnStyle}>\n          Create\n        </Button>\n      </Row>\n      <Divider style={{ background: lightWhite }} />\n      <Row>\n        <Input\n          size=\"large\"\n          placeholder=\"Join an existing room\"\n          onChange={( e ) => setRoomId( e.target.value )}\n          onPressEnter={() => dispatch( joinRoom( roomId ) )}\n          style={inputStyle}\n        />\n        <Button type='primary' onClick={() => dispatch( joinRoom( roomId ) )} style={btnStyle}>\n          Join\n        </Button>\n      </Row>\n    </>\n  )\n}\n\nconst SignIn = () => {\n  const room = useSelector( state => state.room );\n  return (\n    <Row justify={'center'}>\n      <Card style={{ width: 550, background: lightWhite }}>\n        {room ? <CreateOrJoinRoom /> : <CreateUserName />}\n      </Card>\n    </Row>\n  );\n}\n\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}